import { testCaseRunner, logger, server } from '#/TestTemplate'

testCaseRunner('u2f', 'normal', test => {
  test.test('Get u2f registration', async function (t) {
    logger(['info', 'testing', 'test'], `Get u2f registration`)
    const options = {
      method: 'GET',
      url: '/api/v1/u2f-registration',
      headers: {
        cookie: 'P_SESSION=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJpc3QxNjcwMzMiLCJyb2xlcyI6W119.yY0DFFxLnWNg-gSggkA2AuOzeLl7M-yCjQ9A9gHZ5fs;P_IS_LOGGED=normal'
      }
    }
    let response
    const expected = {
      version: 'U2F_V2',
      appId: 'https://localhost:8080'
      // challenge: 'ci5TFROjfRHpHsuN3jNgiQ0SSElZP3vcQG30fQ3TekU'
    }
    try {
      response = await server.inject(options)
      delete response.result.challenge
    } catch (err) {
      logger(['crit', 'testing', 'test'], err.message)
    } finally {
      t.deepEqual(response && response.result, expected)
      logger(['info', 'testing', 'test'], 'Get u2f registration end')
      t.end()
    }
  })
})
