import { getJwt } from '@/plugins/auth/services/JwtUtils'

const handler = (options) => {
  return async (request, h) => {
    let credentials = await options.jwt.getPayloadForUsername({ username: request.getPrincipal().username })
    const token = getJwt({
      payload: credentials,
      secretOrPrivateKey: options.jwt.secret,
      options: { expiresIn: options.sessionTime || '1 hour' }
    })
    h.state('P_SESSION', token, {encoding: 'none', ttl: options.sessionTime * 1000, isSameSite: 'Strict', path: '/'})
    h.state('P_INFO', Buffer.from(JSON.stringify({ twoFactor: false, roles: credentials.roles })).toString('base64'), {encoding: 'none', ttl: options.sessionTime * 1000, isSameSite: 'Strict', path: '/', isHttpOnly: false})
    return h.redirect('/')
  }
}

const config = {
  description: 'Logout 2FA',
  plugins: {
    'porg-auth': {
      type: 'user-session',
      roles: [],
      twoFactor: true
    }
  }
}

export default { handler, config }
