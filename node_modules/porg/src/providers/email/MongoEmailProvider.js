import { getDB } from '@/drivers/MongoDB'

const emailState = {
  pending: 'pending',
  sended: 'sended',
  timeout: 'timeout'
}

export default class MongoEmailProvider {
  async getNextEmails () {
    let db = await getDB()
    const emails = await db.collection('porg-emails').find({emailState: emailState.pending}).limit(60).toArray()
    return emails
  }

  async insertEmail ({from, to, subject, text, html, deliveryTime, expireTime}) {
    let db = await getDB()
    await db.collection('porg-emails').insertOne({from, to, subject, text, html, deliveryTime, expireTime, emailState: emailState.pending})
  }

  async updateEmailState ({ id, state }) {
    if (state === emailState.sended || state === emailState.timeout) {
      let db = await getDB()
      await db.collection('porg-emails').updateOne({ '_id': id }, {'$set': { 'emailState': state }}, {'upsert': false})
    } else {
      throw new Error('Invalid email state')
    }
  }
}
