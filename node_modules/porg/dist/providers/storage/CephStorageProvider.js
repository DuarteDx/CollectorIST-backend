'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _Ceph = require('../../drivers/Ceph');

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

class CephStorageProvider {
  constructor({ rootPath }) {
    this.rootPath = rootPath;
  }

  storeFile({ file, path }) {
    return _asyncToGenerator(function* () {
      return (0, _Ceph.getBucket)().createObject(path, file);
    })();
  }

  downloadFile({ filePath }) {
    return _asyncToGenerator(function* () {
      return (0, _Ceph.getBucket)().readObject(filePath);
    })();
  }

  deleteFile({ filePath }) {
    return _asyncToGenerator(function* () {
      return (0, _Ceph.getBucket)().deleteObject(filePath);
    })();
  }

  listFiles({ searchPath }) {
    return _asyncToGenerator(function* () {
      throw Error('Operation not supported');
    })();
  }
}
exports.default = CephStorageProvider;
module.exports = exports['default'];