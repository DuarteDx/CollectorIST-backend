'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _StatsHealthcheckService = require('../services/StatsHealthcheckService');

var _StatsHealthcheckService2 = _interopRequireDefault(_StatsHealthcheckService);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

exports.default = options => {
  const handler = (() => {
    var _ref = _asyncToGenerator(function* (request, h) {
      return (0, _StatsHealthcheckService2.default)(options);
    });

    return function handler(_x, _x2) {
      return _ref.apply(this, arguments);
    };
  })();

  const config = {
    description: 'Check status for connected drivers',
    plugins: {
      'porg-auth': {
        type: 'user-session',
        roles: ['admin']
      }
    }
  };
  return { handler, config };
};

module.exports = exports['default'];