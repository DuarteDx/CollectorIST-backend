'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _joi = require('joi');

var _joi2 = _interopRequireDefault(_joi);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _joi2.default.object().keys({
  'application': _joi2.default.object().keys({
    'protocol': _joi2.default.string().valid(['http', 'https']).default('http'),
    'name': _joi2.default.string().required(),
    'host': _joi2.default.string().default('localhost'),
    'backendPort': _joi2.default.number().min(1).max(65535).default(8000),
    'frontendPort': _joi2.default.number().min(1).max(65535).default(8080),
    'forkInDevelopment': _joi2.default.boolean().default(false),
    'tls': _joi2.default.object().keys({
      'key': _joi2.default.string().required(),
      'cert': _joi2.default.string().required()
    })
  }).required(),
  'auth': _joi2.default.object().keys({
    'staticBearer': _joi2.default.object().pattern(/^[a-zA-Z]/, _joi2.default.string()),
    'userSession': _joi2.default.object().keys({
      'unauthorizedPath': _joi2.default.string().default('/unauthorized'),
      'singleSignOn': _joi2.default.object().keys({
        'sessionTime': _joi2.default.number().default(3600),
        'jwt': _joi2.default.object().keys({
          'secret': _joi2.default.string().required()
        }).required(),
        'type': _joi2.default.object().keys({
          'cas': _joi2.default.object().keys({
            'serverUrl': _joi2.default.string().uri({ scheme: ['http', 'https'] }).required(),
            'strictSSL': _joi2.default.boolean().default(true)
          }),
          'saml': _joi2.default.object().keys({
            loginUrl: _joi2.default.string().uri({ scheme: ['http', 'https'] }).required(),
            logoutUrl: _joi2.default.string().uri({ scheme: ['http', 'https'] }).required(),
            spCertificatePath: _joi2.default.string().required(),
            spPrivateKeyPath: _joi2.default.string().required(),
            idpCertificatePath: _joi2.default.string().required(),
            logoutRedirect: _joi2.default.string().uri({ scheme: ['http', 'https'] }).required()
          })
        }).required()
      }),
      'twoFactor': _joi2.default.object().keys({
        'sessionTime': _joi2.default.number().default(1200),
        'persistenceProvider': _joi2.default.string().valid(['raw', 'mongo', 'neo4j', 'mysql']).required(),
        'modes': _joi2.default.array().items(['totp', 'u2f']).required()
      })
    })
  }),
  'plugins': _joi2.default.array().items(_joi2.default.object().keys({
    'name': _joi2.default.string().required(),
    'options': _joi2.default.object(),
    'routes': _joi2.default.object(),
    'once': _joi2.default.boolean()
  })).default([]),
  'errors': _joi2.default.object().keys({
    'localeEndpoint': _joi2.default.string().default('/api/v1/errors')
  }).default({}),
  'papagaio': _joi2.default.object().default({}),
  'email': _joi2.default.object().keys({
    'throttling': _joi2.default.object().keys({
      'persistenceProvider': _joi2.default.string().valid(['mongo', 'neo4j', 'mysql']).required(),
      'interval': _joi2.default.number().default(500)
    }),
    'driver': _joi2.default.string().valid(['smtp']).default('smtp')
  }),
  'healthcheck': _joi2.default.object().keys({}),
  'drivers': _joi2.default.object().keys({
    'mongo': _joi2.default.object().keys({
      'replicaSet': _joi2.default.string().optional(),
      'username': _joi2.default.string().optional(),
      'password': _joi2.default.string().optional(),
      'servers': _joi2.default.array().items({
        'host': _joi2.default.string().required(),
        'port': _joi2.default.number().integer().default(27017)
      }).min(1)
    }).optional(),
    'consul': _joi2.default.object().keys({
      'secure': _joi2.default.boolean(),
      'host': _joi2.default.string(),
      'port': _joi2.default.number()
    }).optional(),
    'elasticsearch': _joi2.default.object().keys({
      'host': _joi2.default.string().required()
    }).optional(),
    'smtp': _joi2.default.object().keys({
      'host': _joi2.default.string().default('smtp.tecnico.ulisboa.pt'),
      'port': _joi2.default.number().integer().default(25),
      'secure': _joi2.default.boolean().default(false)
    }).optional(),
    'neo4j': _joi2.default.object().keys({
      'host': _joi2.default.string().required(),
      'user': _joi2.default.string().required(),
      'pass': _joi2.default.string().required()
    }).optional(),
    'mysql': _joi2.default.object().keys({
      'connectionLimit': _joi2.default.number().min(1).max(300).default(10),
      'host': _joi2.default.string().required(),
      'user': _joi2.default.string().required(),
      'pass': _joi2.default.string().required(),
      'database': _joi2.default.string().required()
    }).optional(),
    's3': _joi2.default.object().keys({
      'host': _joi2.default.string().required(),
      'port': _joi2.default.number().integer().default(443),
      'accessKey': _joi2.default.string(),
      'secretKey': _joi2.default.string()
    }).optional(),
    'fenixEduDrive': _joi2.default.object().keys({
      'host': _joi2.default.string(),
      'port': _joi2.default.number().integer().default(443)
      // TODO
    }).optional()
  }).optional(),
  'lockProvider': _joi2.default.object().keys({
    'type': _joi2.default.string().valid(['consul']),
    'options': _joi2.default.object().when('type', {
      is: 'consul',
      then: _joi2.default.object().keys({
        'keyValueStorePath': _joi2.default.string().regex(/^([a-zA-Z0-9_-][a-zA-Z0-9_\/-]*)[a-zA-Z0-9_-]$/gm).required()
      })
    })
  }),
  'tasks': _joi2.default.object().keys({
    'persistenceProvider': _joi2.default.string().valid(['mongo', 'neo4j', 'mysql']).default('mongo'),
    'roles': _joi2.default.array().items(_joi2.default.string()).default(['admin']),
    'twoFactor': _joi2.default.boolean().default(true)
  }),
  'migrations': _joi2.default.object().keys({
    'persistenceProvider': _joi2.default.string().valid(['mongo', 'neo4j', 'mysql']).default('mongo')
  }),
  'storage': _joi2.default.object().pattern(/^/, _joi2.default.object().keys({
    'provider': _joi2.default.string().lowercase().valid(['fenixedu-drive', 's3', 'file-system']),
    'rootPath': _joi2.default.string()
  })),
  'fileUploadHandlers': _joi2.default.object().pattern(/^/, _joi2.default.object().keys({
    'persistenceProvider': _joi2.default.string().lowercase().valid(['mongo']).required(),
    'storageProvider': _joi2.default.string().lowercase().required(),
    'tempStorageRootPath': _joi2.default.string(),
    'porgAuth': _joi2.default.object(), // will be validated by porg-auth plugin when generating endpoints
    'payload': _joi2.default.object(), // will be validated by hapijs configuration for payload route property
    'deduplication': _joi2.default.boolean().default(false),
    'mimeTypes': _joi2.default.array().items(_joi2.default.string())
  })),
  'nodeStartPath': _joi2.default.string(),
  'metrics': _joi2.default.object().keys({
    'collectDefaultMetrics': _joi2.default.boolean().required(),
    'enabled': _joi2.default.boolean().required(),
    'endpoint': _joi2.default.string().required()
  }).default({ 'enabled': true, 'collectDefaultMetrics': true, 'endpoint': '/api/v1/metrics' })
});
module.exports = exports['default'];