'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Smtp = exports.MySQL = exports.Consul = exports.Neo4J = exports.Elasticsearch = exports.Mongo = exports.runConfigWithDriver = undefined;

var _MongoDB = require('./MongoDB');

var Mongo = _interopRequireWildcard(_MongoDB);

var _Elasticsearch = require('./Elasticsearch');

var Elasticsearch = _interopRequireWildcard(_Elasticsearch);

var _Consul = require('./Consul');

var Consul = _interopRequireWildcard(_Consul);

var _Neo4J = require('./Neo4J');

var Neo4J = _interopRequireWildcard(_Neo4J);

var _MySQL = require('./MySQL');

var MySQL = _interopRequireWildcard(_MySQL);

var _Smtp = require('./Smtp');

var Smtp = _interopRequireWildcard(_Smtp);

var _S = require('./S3');

var S3 = _interopRequireWildcard(_S);

var _FenixEduDrive = require('./FenixEduDrive');

var FenixEduDrive = _interopRequireWildcard(_FenixEduDrive);

var _errors = require('../plugins/errors');

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

const driversMap = {
  mongo: Mongo,
  elasticsearch: Elasticsearch,
  consul: Consul,
  mysql: MySQL,
  neo4j: Neo4J,
  smtp: Smtp,
  s3: S3,
  fenixeduDrive: FenixEduDrive
};

const runConfigWithDriver = ({ driver, options }) => {
  const driverEntry = driversMap[driver];
  if (driverEntry) {
    driverEntry.configDriver({ options: options });
    return driverEntry;
  } else {
    return (0, _errors.errorWithKey)('driver-not-found', {
      tags: ['error', 'database', 'driver'],
      ctx: { driver },
      metadata: { driver }
    });
  }
};

exports.runConfigWithDriver = runConfigWithDriver;
exports.Mongo = Mongo;
exports.Elasticsearch = Elasticsearch;
exports.Neo4J = Neo4J;
exports.Consul = Consul;
exports.MySQL = MySQL;
exports.Smtp = Smtp;