'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.shutdown = exports.cleanDatabase = exports.consulClient = exports.configDriver = undefined;

var _consul = require('consul');

var _consul2 = _interopRequireDefault(_consul);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

let consulClient;
const configDriver = ({ options }) => {
  try {
    exports.consulClient = consulClient = (0, _consul2.default)(options);
  } catch (err) {
    console.log(err);
  }
};

const cleanDatabase = (() => {
  var _ref = _asyncToGenerator(function* () {
    // throw new Error('Clean database not defined')
  });

  return function cleanDatabase() {
    return _ref.apply(this, arguments);
  };
})();

const shutdown = (() => {
  var _ref2 = _asyncToGenerator(function* () {});

  return function shutdown() {
    return _ref2.apply(this, arguments);
  };
})();

exports.configDriver = configDriver;
exports.consulClient = consulClient;
exports.cleanDatabase = cleanDatabase;
exports.shutdown = shutdown;