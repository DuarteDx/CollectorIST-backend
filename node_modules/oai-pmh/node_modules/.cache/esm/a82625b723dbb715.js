let promisify,get,parseString,OaiPmhError;_23d‍.x([["parseOaiPmhXml",()=>parseOaiPmhXml]]);_23d‍.w("util",[["promisify",["promisify"],function(v){promisify=v}]]);_23d‍.w("lodash",[["get",["get"],function(v){get=v}]]);_23d‍.w("xml2js",[["parseString",["parseString"],function(v){parseString=v}]]);_23d‍.w("./errors",[["OaiPmhError",["OaiPmhError"],function(v){OaiPmhError=v}]]);





// test if the parsed xml contains an error
       async function parseOaiPmhXml (xml) {
  // parse xml into js object
  const obj = await promisify(parseString)(xml, {
    explicitArray: false,
    trim: true,
    normalize: true
  })

  const oaiPmh = obj && obj['OAI-PMH']

  if (!oaiPmh) {
    throw new OaiPmhError('Returned data does not conform to OAI-PMH')
  }

  const error = oaiPmh.error
  if (error) {
    throw new OaiPmhError(
      `OAI-PMH provider returned an error: ${error._}`,
      get(error, '$.code')
    )
  }

  return oaiPmh
}
